diff --git a/config.def.h b/config.def.h
index 22d2171..74083b8 100644
--- a/config.def.h
+++ b/config.def.h
@@ -7,6 +7,7 @@
 static const int sloppyfocus               = 1;  /* focus follows mouse */
 static const int bypass_surface_visibility = 0;  /* 1 means idle inhibitors will disable idle tracking even if it's surface isn't visible  */
 static const unsigned int borderpx         = 1;  /* border pixel of windows */
+static const unsigned int gaps             = 32;
 static const float rootcolor[]             = COLOR(0x222222ff);
 static const float bordercolor[]           = COLOR(0x444444ff);
 static const float focuscolor[]            = COLOR(0x005577ff);
diff --git a/dwl.c b/dwl.c
index a2711f6..4da5b98 100644
--- a/dwl.c
+++ b/dwl.c
@@ -2692,7 +2692,7 @@ void
 tile(Monitor *m)
 {
 	unsigned int mw, my, ty;
-	int i, n = 0;
+	int i, g, gg, e, n = 0;
 	Client *c;
 
 	wl_list_for_each(c, &clients, link)
@@ -2705,18 +2705,26 @@ tile(Monitor *m)
 		mw = m->nmaster ? (int)roundf(m->w.width * m->mfact) : 0;
 	else
 		mw = m->w.width;
-	i = my = ty = 0;
+
+	if (n > 1) {
+		i = 0;
+		my = ty = g = gaps;
+		gg = 2 * gaps;
+		e = n > m->nmaster && m->nmaster > 0 ? gaps / 2 : 0;
+	} else
+		i = my = ty = g = gg = e = 0;
+
 	wl_list_for_each(c, &clients, link) {
 		if (!VISIBLEON(c, m) || c->isfloating || c->isfullscreen)
 			continue;
 		if (i < m->nmaster) {
-			resize(c, (struct wlr_box){.x = m->w.x, .y = m->w.y + my, .width = mw,
-				.height = (m->w.height - my) / (MIN(n, m->nmaster) - i)}, 0);
-			my += c->geom.height;
+			resize(c, (struct wlr_box){.x = m->w.x + g, .y = m->w.y + my, .width = mw - gg + e,
+				.height = (m->w.height - my) / (MIN(n, m->nmaster) - i) - g}, 0);
+			my += c->geom.height + g;
 		} else {
-			resize(c, (struct wlr_box){.x = m->w.x + mw, .y = m->w.y + ty,
-				.width = m->w.width - mw, .height = (m->w.height - ty) / (n - i)}, 0);
-			ty += c->geom.height;
+			resize(c, (struct wlr_box){.x = m->w.x + mw + g - e, .y = m->w.y + ty,
+				.width = m->w.width - mw - gg + e, .height = (m->w.height - ty) / (n - i) - g}, 0);
+			ty += c->geom.height + g;
 		}
 		i++;
 	}
